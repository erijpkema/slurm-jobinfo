name: Create release from tag

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10


jobs:
  build:
    name: Create release and upload RPM
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\/v/}

      - name: create tarball
        shell: bash
        run: |
          version="$(grep Version jobinfo.spec | awk '{print $2}')"
          mkdir SOURCES
          mkdir SPECS
          cp jobinfo.spec SPECS
          mkdir jobinfo-${version}
          cp jobinfo jobinfo-${version}
          tar -czf SOURCES/jobinfo-${version}.tar.gz jobinfo-${version}

      - name: rpmbuild
        uses: robertdebock/rpmbuild-action@1.0.0

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ${{ github.workspace }}/RPMS/jobinfo-${{ steps.get_version.outputs.VERSION }}-1.el8.noarch.rpm
          asset_name: jobinfo-${{ steps.get_version.outputs.VERSION }}.rpm
          asset_content_type: application/x-rpm

